:logging:
  :level: DEBUG # You can optionally switch to INFO for production
:aws:
  :access_key_id: <%= ENV['AWS_ACCESS_KEY_ID'] %>
  :secret_access_key: <%= ENV['AWS_SECRET_ACCESS_KEY'] %>
:s3:
  :region: <%= ENV['S3_REGION'] %>
  :buckets:
    :assets: s3://snowplow-hosted-assets # DO NOT CHANGE unless you are hosting the jarfiles etc yourself in your own bucket
    :log: <%= ENV['BUCKET_LOG'] %>
    :raw:
      :in: <%= ENV['BUCKET_RAW_IN'] %>
      :processing: <%= ENV['BUCKET_RAW_PROCESSING'] %>
      :archive: <%= ENV['BUCKET_RAW_ARCHIVE'] %>    # e.g. s3://my-archive-bucket/raw
    :enriched:
      :good: <%= ENV['BUCKET_ENRICHED_GOOD'] %>       # e.g. s3://my-out-bucket/enriched/good
      :bad: <%= ENV['BUCKET_ENRICHED_BAD'] %>        # e.g. s3://my-out-bucket/enriched/bad
      :errors: <%= ENV['BUCKET_ENRICHED_ERRORS'] %>     # Leave blank unless :continue_on_unexpected_error: set to true below
    :shredded:
      :good: <%= ENV['BUCKET_SHREDDED_GOOD'] %>       # e.g. s3://my-out-bucket/shredded/good
      :bad: <%= ENV['BUCKET_SHREDDED_BAD'] %>        # e.g. s3://my-out-bucket/shredded/bad
      :errors: <%= ENV['BUCKET_SHREDDED_ERRORS'] %>     # Leave blank unless :continue_on_unexpected_error: set to true below
:emr:
  :ami_version: 2.4.2      # Choose as per http://docs.aws.amazon.com/ElasticMapReduce/latest/DeveloperGuide/emr-plan-ami.html
  :region: <%= ENV['EMR_REGION'] %>        # Always set this
  :placement: <%= ENV['EMR_PLACEMENT'] %>     # Set this if not running in VPC. Leave blank otherwise
  :ec2_subnet_id: <%= ENV['EMR_EC2_SUBNET_ID'] %> # Set this if running in VPC. Leave blank otherwise
  :ec2_key_name: <%= ENV['EMR_EC2_KEY_NAME'] %>
  :software:
    :hbase:                # To launch on cluster, provide version, "0.92.0", keep quotes
    :lingual:              # To launch on cluster, provide version, "1.1", keep quotes
  # Adjust your Hadoop cluster below
  :jobflow:
    :master_instance_type: <%= ENV['EMR_JOBFLOW_MASTER_INSTANCE_TYPE'] || 'm1.small' %>
    :core_instance_count: <%= ENV['EMR_JOBFLOW_CORE_INSTANCE_COUNT'] || 2 %>
    :core_instance_type: <%= ENV['EMR_JOBFLOW_CORE_INSTANCE_TYPE'] || 'm1.small' %>
    :task_instance_count: 0 # Increase to use spot instances
    :task_instance_type: <%= ENV['EMR_JOBFLOW_TASK_INSTANCE_TYPE'] || 'm1.small' %>
    :task_instance_bid: 0.015 # In USD. Adjust bid, or leave blank for non-spot-priced (i.e. on-demand) task instances
:etl:
  :job_name: Snowplow ETL # Give your job a name
  :versions:
    :hadoop_enrich: 0.6.0 # Version of the Hadoop Enrichment process
    :hadoop_shred: 0.2.0 # Version of the Hadoop Shredding process
  :collector_format: cloudfront # Or 'clj-tomcat' for the Clojure Collector
  :continue_on_unexpected_error: false # Set to 'true' (and set :out_errors: above) if you don't want any exceptions thrown from ETL
:iglu:
  :schema: iglu:com.snowplowanalytics.iglu/resolver-config/jsonschema/1-0-0
  :data:
    :cache_size: 500
    :repositories:
      - :name: "Iglu Central"
        :priority: 0
        :vendor_prefixes:
          - com.snowplowanalytics
        :connection:
          :http:
            :uri: http://iglucentral.com
